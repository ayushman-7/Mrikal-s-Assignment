name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Add EC2 SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2.pem
        chmod 600 ~/.ssh/ec2.pem
    
    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
    
    - name: Build and push Docker images
      run: |
        docker compose build
        docker save -o frontend.tar frontend
          docker save -o api.tar api
      
    - name: Compress files
      run: |
        tar -czf app_files.tar.gz docker-compose.yaml frontend.tar api.tar .env.docker
        
    - name: Transfer compressed file to EC2
      run: |
        rsync -avz --progress -e "ssh -i ~/.ssh/ec2.pem -o StrictHostKeyChecking=no" \
          app_files.tar.gz \
          ubuntu@${{ secrets.EC2_HOST }}:~/app/ || \
        scp -i ~/.ssh/ec2.pem -o StrictHostKeyChecking=no \
          app_files.tar.gz \
          ubuntu@${{ secrets.EC2_HOST }}:~/app/
      
    - name: Extract files on EC2 instance
      run: |
        ssh -i ~/.ssh/ec2.pem -o StrictHostKeyChecking=no \
          ubuntu@${{ secrets.EC2_HOST }} "cd ~/app/ && tar -xzf app_files.tar.gz && rm app_files.tar.gz"
    
    
    - name: Deploy to EC2
      run: |
        ssh -i ~/.ssh/ec2.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} '
          cd ~/app
          docker load -i frontend.tar
          docker load -i api.tar
          cp .env.docker .env
          docker compose down
          docker compose up -d
          rm frontend.tar api.tar
        '